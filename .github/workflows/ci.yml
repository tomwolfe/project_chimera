# .github/workflows/ci.yml
name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip' # Cache pip dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Explicitly install Ruff and Black for CI to ensure they are available
        pip install ruff black
    - name: Run Ruff format to fix any formatting issues before running Bandit and Pytest # ADDED STEP
      run: |
        ruff format .
    - name: Run Ruff (Linter & Formatter Check) - Fail on Violation
      # Ruff can act as both linter (flake8 replacement) and formatter (black replacement)
      # --output-format=github makes annotations appear directly in GitHub PRs
      # Ensure Ruff is configured to fail on issues
      run: |
        ruff check . --output-format=github --exit-non-zero-on-fix
        ruff format --check --diff --exit-non-zero-on-fix # Show diff and fail on formatting issues
    - name: Run Bandit Security Scan with corrected configuration # MODIFIED NAME
      # Configure Bandit to fail on high/medium severity issues
      run: |
        bandit -r . -ll -c pyproject.toml --exit-on-error
        # Bandit is configured to exit-on-error, which will fail the job if issues are found based on pyproject.toml settings.
    - name: Run Pytest and generate coverage report
      run: |
        pytest --cov=src --cov-report=xml --cov-report=term
    # You could add more steps here, e.g., for security scanning (Bandit), deployment, etc.